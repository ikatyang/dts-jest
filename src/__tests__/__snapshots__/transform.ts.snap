// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`should throw error with unattachable trigger(s) 1`] = `
"Unattachable trigger(s) detected:

  fixtures/transform/unattachable.ts:1
  fixtures/transform/unattachable.ts:3
  fixtures/transform/unattachable.ts:5
  fixtures/transform/unattachable.ts:7"
`;

exports[`should transform correctly 1`] = `
"var _dts_jest_runtime_;beforeAll(function (done) {require(\\"dts-jest\\").setup(module, (function () {try {return _dts_jest_;} catch (e) {return {};}})(), {\\"4\\":\\"T.none()\\",\\"7\\":\\"T.none()\\",\\"10\\":\\"T.show()\\",\\"13\\":\\"T.show()\\",\\"16\\":\\"T.skip()\\",\\"19\\":\\"T.skip()\\",\\"22\\":\\"T.only()\\",\\"25\\":\\"T.only()\\",\\"29\\":\\"T.in_block()\\"}, function () {_dts_jest_runtime_ = arguments[0];done();});});



test(\\"T.none()\\", function () {expect(_dts_jest_runtime_.snapshot(4)).toMatchSnapshot();});


test(\\"description-none\\", function () {expect(_dts_jest_runtime_.snapshot(7)).toMatchSnapshot();});


test(\\"T.show()\\", function () {console.log(_dts_jest_runtime_.report(10));});


test(\\"description-show\\", function () {console.log(_dts_jest_runtime_.report(13));});


test.skip(\\"T.skip()\\", function () {expect(_dts_jest_runtime_.snapshot(16)).toMatchSnapshot();});


test.skip(\\"description-skip\\", function () {expect(_dts_jest_runtime_.snapshot(19)).toMatchSnapshot();});


test.only(\\"T.only()\\", function () {expect(_dts_jest_runtime_.snapshot(22)).toMatchSnapshot();});


test.only(\\"description-only\\", function () {expect(_dts_jest_runtime_.snapshot(25)).toMatchSnapshot();});



test(\\"T.in_block()\\", function () {expect(_dts_jest_runtime_.snapshot(29)).toMatchSnapshot();});


"
`;

exports[`should transform correctly with template token 1`] = `
"var _dts_jest_runtime_;beforeAll(function (done) {require(\\"dts-jest\\").setup(module, (function () {try {return _dts_jest_;} catch (e) {return {};}})(), {\\"4\\":\\"R.keysIn(f)\\",\\"10\\":\\"R.keysIn(f)\\",\\"26\\":\\"R.toString(new Point(1, 2))\\"}, function () {_dts_jest_runtime_ = arguments[0];done();});});



test(\\"R.keysIn(f)\\", function () {expect(_dts_jest_runtime_.snapshot(4)).toMatchSnapshot();});





test(\\"R.keysIn(f)\\", function () {expect(_dts_jest_runtime_.snapshot(10)).toMatchSnapshot();});















test(\\"R.toString(new Point(1, 2))\\", function () {expect(_dts_jest_runtime_.snapshot(26)).toMatchSnapshot();});

"
`;
