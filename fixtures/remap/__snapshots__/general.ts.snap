// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Math.abs(-1) 1`] = `"number"`;

exports[`__ greet('Alice') 1`] = `"string"`;

exports[`F R.F() 1`] = `"false"`;

exports[`T R.T() 1`] = `"true"`;

exports[`add R.add(2, 3) 1`] = `"number"`;

exports[`add R.add(7)(10) 1`] = `"number"`;

exports[`addIndex R.addIndex<number, number, number[], number[]>(R.map)(squareEnds)([8, 5, 3, 0, 9]) 1`] = `"number[]"`;

exports[`addIndex R.addIndex<number, number, number[], number[]>(R.map)(squareEnds, [8, 5, 3, 0, 9]) 1`] = `"number[]"`;

exports[`addIndex R.addIndex<number, void, number[], number[]>(R.forEach)(plusFive)([1, 2, 3]) 1`] = `"number[]"`;

exports[`addIndex filterIndexed(lastTwo)([8, 6, 7, 5, 3, 0, 9]) 1`] = `"number[]"`;

exports[`addIndex filterIndexed(lastTwo, [8, 6, 7, 5, 3, 0, 9]) 1`] = `"number[]"`;

exports[`addIndex reduceIndexed(
        (acc: string, val: string, idx: number) => \`\${acc},\${idx}-\${val}\`,
        '',
        ['f', 'o', 'o', 'b', 'a', 'r'],
      ) 1`] = `"{}"`;

exports[`addIndex reduceIndexed(objectify)({}, ['a', 'b', 'c']) 1`] = `"Record<string, number>"`;

exports[`addIndex reduceIndexed(objectify, {})(['a', 'b', 'c']) 1`] = `"Record<string, number>"`;

exports[`addIndex reduceIndexed(objectify, {}, ['a', 'b', 'c']) 1`] = `"Record<string, number>"`;

exports[`minBy R.minBy(cmp)(a)(c) 1`] = `"{ x: number; }"`;

exports[`minBy R.minBy(cmp)(a, b) 1`] = `"{ x: number; }"`;

exports[`minBy R.minBy(cmp, a, b) 1`] = `"{ x: number; }"`;

exports[`minBy R.minBy(cmp, d, e) 1`] = `
"Argument of type '{ x: string; }' is not assignable to parameter of type '{ x: number; }'.
  Types of property 'x' are incompatible.
    Type 'string' is not assignable to type 'number'."
`;
